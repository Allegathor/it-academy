{"version":3,"sources":["../scripts/tree_sum.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"74e12010a24d512a4c21482c9fbc6663.map","sourcesContent":["var m = [ 5, 7,\n        [ 4, [2], 8, [1,3], 2 ],\n        [ 9, [] ],\n        1, 8, []];\n\nvar treeSum = function(arr, curIndex, stopIndex) {\n  curIndex = curIndex || 0;\n  stopIndex = stopIndex || arr.length - 1;\n\n  var floatVal = parseFloat(arr[curIndex]);\n\n  if ( Array.isArray(arr[curIndex]) && (arr[curIndex].length) ) {\n    if (curIndex === stopIndex) {\n      return treeSum(arr[curIndex]);\n    }\n    return treeSum(arr[curIndex]) + treeSum(arr, curIndex + 1);\n\n  } else if ( !isNaN(floatVal) ) {\n    if (curIndex === stopIndex) {\n      return floatVal;\n    }\n    return floatVal + treeSum(arr, curIndex + 1);\n\n  } else {\n    if (curIndex === stopIndex) {\n      return 0;\n    }\n    return treeSum(arr, curIndex + 1);\n  }\n\n}\n\nconsole.log(treeSum(m));\n"]}