{"version":3,"sources":["../scripts/palindrome.js"],"names":["btn","document","getElementById","input","formatString","str","s","toLowerCase","replace","isPalindrome","startIndex","stopIndex","length","i","j","charAt","isPalindromeRecur","btnHandler","console","log","value","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAMC,SAASC,cAAT,CAAwB,WAAxB,CAAV;AACA,IAAIC,QAAQF,SAASC,cAAT,CAAwB,WAAxB,CAAZ;;AAEA,IAAIE,eAAe,SAAfA,YAAe,CAASC,GAAT,EAAc;;AAEhC,KAAIC,IAAID,IAAIE,WAAJ,EAAR;;AAEAD,KAAIA,EAAEE,OAAF,CAAU,mCAAV,EAA+C,EAA/C,CAAJ;AACAF,KAAIA,EAAEE,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAJ;AACA,CAND;;AAQA,IAAIC,eAAe,SAAfA,YAAe,CAASJ,GAAT,EAAc;;AAEhC,KAAIK,aAAa,CAAjB;AACA,KAAIC,YAAYN,IAAIO,MAAJ,GAAa,CAA7B;;AAEA,KAAIC,IAAIH,UAAR;AACA,KAAII,IAAIH,SAAR;;AAEA,KAAIN,IAAIO,MAAJ,GAAa,CAAjB,EAAoB;;AAEnB,SAAMP,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAxB,EAAwC;AACvCD;AACAC;;AAEA,OAAID,IAAIC,CAAR,EAAW;AACV,WAAO,IAAP;AACA;AACD;;AAED,SAAO,KAAP;AAEA,EAbD,MAaO,IAAIT,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAC5B,SAAQP,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAnB,GAAoC,IAApC,GAA2C,KAAlD;AAEA,EAHM,MAGA,IAAIT,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAC5B,SAAO,IAAP;AACA;AACD,CA3BD;;AA8BA,IAAII,oBAAoB,SAApBA,iBAAoB,CAASX,GAAT,EAAcQ,CAAd,EAAiBC,CAAjB,EAAoB;AAC3CD,KAAIA,KAAK,CAAT;AACAC,KAAIA,KAAKT,IAAIO,MAAJ,GAAa,CAAtB;;AAEA,KAAIC,IAAIC,CAAR,EAAW;AACV,MAAIT,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAtB,EAAqC;AACpC,UAAOE,kBAAkBX,GAAlB,EAAuBQ,IAAI,CAA3B,EAA8BC,IAAI,CAAlC,CAAP;AAEA,GAHD,MAGO;AACN,UAAO,KAAP;AAEA;AACD;;AAED,QAAO,IAAP;AAEA,CAhBD;;AAmBA,IAAIG,aAAa,SAAbA,UAAa,GAAW;AAC3BC,SAAQC,GAAR,CAAYV,aAAaN,MAAMiB,KAAnB,CAAZ;AACAF,SAAQC,GAAR,CAAYH,kBAAkBb,MAAMiB,KAAxB,CAAZ;AACA,CAHD;;AAKApB,IAAIqB,gBAAJ,CAAqB,OAArB,EAA8BJ,UAA9B","file":"80d61dfff143046fc1b5f7b1aba7aabb.map","sourcesContent":["var btn = document.getElementById('check-btn');\nvar input = document.getElementById('text-area');\n\nvar formatString = function(str) {\n\n\tvar s = str.toLowerCase();\n\n\ts = s.replace(/[\\n\\u0020\\u2013\\u2014\\-?!'\".,ьъ]/g, '');\n\ts = s.replace(/ё/g, 'е');\n}\n\nvar isPalindrome = function(str) {\n\n\tvar startIndex = 0;\n\tvar stopIndex = str.length - 1;\n\n\tvar i = startIndex;\n\tvar j = stopIndex;\n\n\tif (str.length > 2) {\n\n\t\twhile(str.charAt(i) === str.charAt(j))  {\n\t\t\ti++;\n\t\t\tj--;\n\n\t\t\tif (i > j) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\n\t} else if (str.length === 2) {\n\t\treturn (str.charAt(i) === str.charAt(j)) ? true : false;\n\n\t} else if (str.length === 1) {\n\t\treturn true;\n\t}\n}\n\n\nvar isPalindromeRecur = function(str, i, j) {\n\ti = i || 0;\n\tj = j || str.length - 1;\n\n\tif (i < j) {\n\t\tif (str.charAt(i) === str.charAt(j)) {\n\t\t\treturn isPalindromeRecur(str, i + 1, j - 1);\n\n\t\t} else {\n\t\t\treturn false;\n\n\t\t}\n\t}\n\n\treturn true;\n\n}\n\n\nvar btnHandler = function() {\n\tconsole.log(isPalindrome(input.value));\n\tconsole.log(isPalindromeRecur(input.value));\n}\n\nbtn.addEventListener('click', btnHandler);\n"]}