{"version":3,"sources":["../scripts/palindrome.js"],"names":["btn","document","getElementById","input","formatString","str","s","toLowerCase","replace","isPalindrome","startIndex","stopIndex","length","i","j","charAt","isPalindromeRecur","btnHandler","console","log","value","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAMC,SAASC,cAAT,CAAwB,WAAxB,CAAV;AACA,IAAIC,QAAQF,SAASC,cAAT,CAAwB,WAAxB,CAAZ;;AAEA,IAAIE,eAAe,SAAfA,YAAe,CAASC,GAAT,EAAc;;AAE/B,MAAIC,IAAID,IAAIE,WAAJ,EAAR;;AAEAD,MAAIA,EAAEE,OAAF,CAAU,mCAAV,EAA+C,EAA/C,CAAJ;AACAF,MAAIA,EAAEE,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAJ;AACD,CAND;;AAQA,IAAIC,eAAe,SAAfA,YAAe,CAASJ,GAAT,EAAc;;AAE/B,MAAIK,aAAa,CAAjB;AACA,MAAIC,YAAYN,IAAIO,MAAJ,GAAa,CAA7B;;AAEA,MAAIC,IAAIH,UAAR;AACA,MAAII,IAAIH,SAAR;;AAEA,MAAIN,IAAIO,MAAJ,GAAa,CAAjB,EAAoB;;AAElB,WAAMP,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAxB,EAAwC;AACtCD;AACAC;;AAEA,UAAID,IAAIC,CAAR,EAAW;AACT,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAP;AAED,GAbD,MAaO,IAAIT,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,WAAQP,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAnB,GAAoC,IAApC,GAA2C,KAAlD;AAED,GAHM,MAGA,IAAIT,IAAIO,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,WAAO,IAAP;AACD;AACF,CA3BD;;AA8BA,IAAII,oBAAoB,SAApBA,iBAAoB,CAASX,GAAT,EAAcQ,CAAd,EAAiBC,CAAjB,EAAoB;AAC1CD,MAAIA,KAAK,CAAT;AACAC,MAAIA,KAAKT,IAAIO,MAAJ,GAAa,CAAtB;;AAEA,MAAIC,IAAIC,CAAR,EAAW;AACT,QAAIT,IAAIU,MAAJ,CAAWF,CAAX,MAAkBR,IAAIU,MAAJ,CAAWD,CAAX,CAAtB,EAAqC;AACnC,aAAOE,kBAAkBX,GAAlB,EAAuBQ,IAAI,CAA3B,EAA8BC,IAAI,CAAlC,CAAP;AAED,KAHD,MAGO;AACL,aAAO,KAAP;AAED;AACF;;AAED,SAAO,IAAP;AAED,CAhBD;;AAmBA,IAAIG,aAAa,SAAbA,UAAa,GAAW;AAC1BC,UAAQC,GAAR,CAAYV,aAAaN,MAAMiB,KAAnB,CAAZ;AACAF,UAAQC,GAAR,CAAYH,kBAAkBb,MAAMiB,KAAxB,CAAZ;AACD,CAHD;;AAKApB,IAAIqB,gBAAJ,CAAqB,OAArB,EAA8BJ,UAA9B","file":"80d61dfff143046fc1b5f7b1aba7aabb.map","sourcesContent":["var btn = document.getElementById('check-btn');\nvar input = document.getElementById('text-area');\n\nvar formatString = function(str) {\n\n  var s = str.toLowerCase();\n\n  s = s.replace(/[\\n\\u0020\\u2013\\u2014\\-?!'\".,ьъ]/g, '');\n  s = s.replace(/ё/g, 'е');\n}\n\nvar isPalindrome = function(str) {\n\n  var startIndex = 0;\n  var stopIndex = str.length - 1;\n\n  var i = startIndex;\n  var j = stopIndex;\n\n  if (str.length > 2) {\n\n    while(str.charAt(i) === str.charAt(j))  {\n      i++;\n      j--;\n\n      if (i > j) {\n        return true;\n      }\n    }\n\n    return false;\n\n  } else if (str.length === 2) {\n    return (str.charAt(i) === str.charAt(j)) ? true : false;\n\n  } else if (str.length === 1) {\n    return true;\n  }\n}\n\n\nvar isPalindromeRecur = function(str, i, j) {\n  i = i || 0;\n  j = j || str.length - 1;\n\n  if (i < j) {\n    if (str.charAt(i) === str.charAt(j)) {\n      return isPalindromeRecur(str, i + 1, j - 1);\n\n    } else {\n      return false;\n\n    }\n  }\n\n  return true;\n\n}\n\n\nvar btnHandler = function() {\n  console.log(isPalindrome(input.value));\n  console.log(isPalindromeRecur(input.value));\n}\n\nbtn.addEventListener('click', btnHandler);\n"]}