{"version":3,"sources":["../scripts/calc.js"],"names":["input","document","getElementById","output","getTokens","str","arr","s","replace","split","pop","calc","tokens","operators","a","b","tsStack","oq","t","i","length","isNaN","push","parseFloat","stack","el","opd1","opd2","val","n","addEventListener","evt","textContent","value"],"mappings":"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","file":"e5e5c05ab04ae7804c41b199bdb1c9c4.map","sourcesContent":["var input = document.getElementById('exp-input');\nvar output = document.getElementById('exp-result');\n\nvar getTokens = function(str) {\n\tvar arr;\n\tvar s = str.replace(/[^|.+-/*()0-9.]/g, '');\n\ts = s.replace(/(?:(?<=[-+/*^]|^)[-+])?\\d+(?:[.]\\d+)?|(?:(?<=[\\d])[+-]|[*/()])/g, '$&|');\n\n\tarr = s.split('|');\n\tarr.pop();\n\treturn arr;\n}\n\nvar calc = function(tokens) {\n\tvar operators = {\n\t\t'+': function(a, b){ return a + b },\n\n\t\t'-': function(a, b){ return a - b},\n\n\t\t'*': function(a, b){ return a * b },\n\n\t\t'/': function(a, b){ return a / b}\n\t};\n\n\tvar tsStack = [];\n\tvar oq = [];\n\tvar t;\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tt = tokens[i];\n\n\t\tif (!isNaN(t)) {\n\t\t\toq.push(parseFloat(t));\n\n\t\t} else if (t in operators) {\n\n\t\t\twhile((t === '+' || t === '-') && (tsStack[tsStack.length - 1] === '/' || tsStack[tsStack.length - 1] === '*') ) {\n\t\t\t\toq.push(tsStack.pop());\n\n\t\t\t}\n\n\t\t\ttsStack.push(t);\n\n\t\t} else if (t === '(') {\n\t\t\ttsStack.push(t);\n\n\t\t} else if (t === ')') {\n\t\t\twhile(tsStack[tsStack.length - 1] !== '(') {\n\t\t\t\toq.push(tsStack.pop());\n\t\t\t}\n\n\t\t\ttsStack.pop();\n\t\t}\n\t}\n\n\twhile(tsStack.length) {\n\t\toq.push(tsStack.pop());\n\t}\n\n\tvar stack = [];\n\tvar el;\n\tvar opd1;\n\tvar opd2;\n\tvar val;\n\n\tfor(var n = 0; n < oq.length; n++) {\n\t\tel = oq[n];\n\n\t\tif(!isNaN(el)) {\n\t\t\tstack.push(el);\n\n\t\t} else if (el in operators) {\n\t\t\topd1 = stack.pop();\n\t\t\topd2 = stack.pop();\n\n\t\t\tval = operators[el](opd2, opd1);\n\t\t\tstack.push(val);\n\t\t}\n\t}\n\n\treturn stack[0];\n}\n\n\ninput.addEventListener('change', function(evt) {\n\toutput.textContent = calc(getTokens(input.value));\n})\n"]}